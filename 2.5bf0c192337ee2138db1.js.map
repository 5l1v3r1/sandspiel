{"version":3,"sources":["webpack:///./js/render.js","webpack:///./js/fps.js","webpack:///./js/api.js","webpack:///./js/components/menu.js","webpack:///./js/components/ui.js","webpack:///./js/paint.js","webpack:///./js/components/info.js","webpack:///./js/components/hypertext.js","webpack:///./js/components/browse.js","webpack:///./js/app.js","webpack:///./js/fluidShaders.js","webpack:///./js/constants.js","webpack:///./js/fluid.js","webpack:///./js/index.js","webpack:///./crate/pkg/sandtable.js","webpack:///./js/glsl/sand.glsl","webpack:///./js/glsl/sandVertex.glsl","webpack:///./js/glsl/baseVertex.glsl","webpack:///./js/glsl/clear.glsl","webpack:///./js/glsl/display.glsl","webpack:///./js/glsl/splat.glsl","webpack:///./js/glsl/advectionManualFilter.glsl","webpack:///./js/glsl/advection.glsl","webpack:///./js/glsl/divergence.glsl","webpack:///./js/glsl/curl.glsl","webpack:///./js/glsl/vorticity.glsl","webpack:///./js/glsl/pressure.glsl","webpack:///./js/glsl/gradientSubtract.glsl","webpack:///./js/glsl/velocityOut.glsl"],"names":["reglBuilder","require","fsh","vsh","startWebGL","_ref","canvas","universe","_ref$isSnapshot","isSnapshot","regl","attributes","preserveDrawingBuffer","width","height","cell_pointer","cells","Uint8Array","memory","buffer","dataTexture","texture","data","drawSand","frag","uniforms","t","_ref2","tick","resolution","_ref3","viewportWidth","viewportHeight","dpi","window","devicePixelRatio","vert","position","count","poll","storage","functions","fps","_class","_classCallCheck","this","document","getElementById","frames","lastFrameTimeStamp","performance","now","key","value","delta","push","length","shift","min","Infinity","max","sum","i","Math","mean","textContent","concat","round","firebase","e","onload","Menu","close","children","react_default","a","createElement","className","react_router_dom","to","onClick","sizeMap","Index","props","_this","ui_classCallCheck","_getPrototypeOf","call","state","submissionMenuOpen","paused","submitting","size","dataURL","currentSubmission","selectedElement","Species","Water","UI","_assertThisInitialized","location","pathname","setTimeout","pause","load","React","Component","prevProps","id","hash","setState","event","preventDefault","confirm","play","reset","cb","render","toDataURL","snapshot","context","getContext","imgData","createImageData","putImageData","cellData","_this2","_this$state","title","payload","image","fetch","_url","method","body","JSON","stringify","headers","Content-Type","then","res","json","response","console","log","error","_this3","replace","refFromURL","getDownloadURL","dlurl","blob","url","URL","createObjectURL","img","Image","src","ctx","drawImage","getImageData","cellsData","flush_undos","push_undo","_this4","_objectSpread","_this5","_this$state2","Fragment","togglePause","viewBox","points","upload","map","v","setSize","style","padding","cx","cy","r","Object","keys","n","name","setElement","elementID","ElementButton","pop_undo","fontSize","incScore","score","menu","closeMenu","display","placeholder","onChange","target","disabled","submit","eventDistance","b","sqrt","pow","clientX","clientY","norm","mag","magnitude","scale","s","add","sub","painting","lastPaint","repeat","smoothPaint","clearInterval","setInterval","paint","startEvent","d","addEventListener","handleTouches","touches","Array","from","forEach","boundingRect","getBoundingClientRect","scaleX","scaleY","canvasLeft","left","canvasTop","top","x","floor","y","Info","href","HyperText","nodes","text","split","startsWith","search","slice","ago","timeago","Submissions","nextProps","_this$props","submissions","browseVotes","_this$props2","voteFromBrowse","submission","displayTime","Date","timestamp","toLocaleDateString","getTime","format","flexGrow","wordWrap","hypertext","Browse","browse_classCallCheck","browse_possibleConstructorReturn","browse_getPrototypeOf","loadSubmissions","param","browse_objectSpread","browse_defineProperty","exact","onKeyDown","keyCode","history","browse_Submissions","withRouter","BrowseRouter","match","browse","ReactDOM","react_router","path","component","info","baseVertex","clearShaderString","displayShaderString","splatShaderString","advectionManualFilteringShaderString","advectionShaderString","divergenceShaderString","curlShaderString","vorticityShaderString","pressureShaderString","gradientSubtractShaderString","velocityOutShaderString","ratio","check","sandCanvas","fluidColor","__webpack_require__","__webpack_exports__","js_canvas","js_width","js_height","js_universe","js_reset","safari","pushState","onpopstate","go","navigator","userAgent","vendor","opera","test","substr","onbeforeunload","serviceWorker","register","registration","registrationError","Universe","canvas2","ui","resize","screen_width","innerWidth","canvasStyle","innerHeight","fluid","gui","config","TEXTURE_DOWNSAMPLE","DENSITY_DISSIPATION","VELOCITY_DISSIPATION","PRESSURE_DISSIPATION","PRESSURE_ITERATIONS","CURL","SPLAT_RADIUS","pointers","splatStack","_getWebGLContext","halfFloat","supportLinearFiltering","params","alpha","depth","stencil","antialias","gl","isWebGL2","getExtension","clearColor","formatRGBA","formatRG","formatR","halfFloatTexType","HALF_FLOAT","HALF_FLOAT_OES","getSupportedFormat","RGBA16F","RGBA","RG16F","RG","R16F","RED","ext","getWebGLContext","_compileShaders","compileShader","type","source","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","baseVertexShader","VERTEX_SHADER","clearShader","FRAGMENT_SHADER","displayShader","splatShader","advectionManualFilteringShader","advectionShader","divergenceShader","curlShader","vorticityShader","pressureShader","gradientSubtractShader","velocityOutShader","compileShaders","internalFormat","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","fbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","supportRenderTextureFormat","pointerPrototype","dx","dy","down","moved","color","dat","Full","Half","Quarter","onFinishChange","initFramebuffers","step","fun","parseInt","random","texWidth","texHeight","density","velocity","velocityOut","burns","divergence","curl","pressure","GLProgram","vertexShader","fragmentShader","fluid_classCallCheck","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","uniformCount","ACTIVE_UNIFORMS","uniformName","getActiveUniform","getUniformLocation","useProgram","clearProgram","displayProgram","velocityOutProgram","splatProgram","advectionProgram","divergenceProgram","curlProgram","vorticityProgram","pressureProgram","gradientSubtractProgram","drawingBufferWidth","drawingBufferHeight","texType","rgba","rg","createDoubleFBO","LINEAR","createFBO","UNSIGNED_BYTE","texId","w","h","activeTexture","TEXTURE0","viewport","clear","COLOR_BUFFER_BIT","fbo1","fbo2","read","write","swap","temp","blit","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","Float32Array","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","Uint16Array","vertexAttribPointer","FLOAT","enableVertexAttribArray","destination","drawElements","TRIANGLES","UNSIGNED_SHORT","lastTime","winds","burnsData","splat","bind","texUnit","uniform1i","uTarget","uniform1f","aspectRatio","uniform2f","point","uniform3f","radius","targetTouches","pointer","identifier","changedTouches","j","update","dt","amount","multipleSplats","pressureTexId","uVelocity","uSource","texelSize","dissipation","uWind","uCurl","uTexture","uDivergence","uPressure","readPixels","uCells","startFluid","renderLoop","animationId","requestAnimationFrame","u","freeze","Empty","Wall","Sand","Stone","Ice","Gas","Cloner","Mite","Wood","Plant","Fungus","Seed","Fire","Lava","Acid","Dust","Oil","Firework","__wbg_random_58bd29ed438c19c0","cachedTextDecoder","TextDecoder","cachegetUint8Memory","getStringFromWasm","ptr","len","decode","wasm","subarray","__wbindgen_throw","Error","_createClass","freeUniverse","species","obj","create","prototype","__wrap","heap","fill","undefined","module","exports"],"mappings":"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","file":"2.5bf0c192337ee2138db1.js","sourcesContent":["const reglBuilder = require(\"regl\");\nimport { memory } from \"../crate/pkg/sandtable_bg\";\n\nlet fsh = require(\"./glsl/sand.glsl\");\nlet vsh = require(\"./glsl/sandVertex.glsl\");\n\nlet startWebGL = ({ canvas, universe, isSnapshot = false }) => {\n  const regl = reglBuilder({\n    canvas,\n    attributes: { preserveDrawingBuffer: isSnapshot }\n  });\n  // const lastFrame = regl.texture();\n  const width = universe.width();\n  const height = universe.height();\n  let cell_pointer = universe.cells();\n  let cells = new Uint8Array(memory.buffer, cell_pointer, width * height * 4);\n  const dataTexture = regl.texture({ width, height, data: cells });\n\n  let drawSand = regl({\n    frag: fsh,\n    uniforms: {\n      t: ({ tick }) => tick,\n      data: () => {\n        // if (cell_pointer != universe.cells()) {\n        //   console.log(cell_pointer);\n        // }\n        cell_pointer = universe.cells();\n        cells = new Uint8Array(memory.buffer, cell_pointer, width * height * 4);\n        // }\n\n        return dataTexture({ width, height, data: cells });\n      },\n      resolution: ({ viewportWidth, viewportHeight }) => [\n        viewportWidth,\n        viewportHeight\n      ],\n      dpi: window.devicePixelRatio * 2,\n      isSnapshot\n      // backBuffer: lastFrame\n    },\n\n    vert: vsh,\n    attributes: {\n      // Full screen triangle\n      position: [[-1, 4], [-1, -1], [4, -1]]\n    },\n    // Our triangle has 3 vertices\n    count: 3\n  });\n\n  return () => {\n    regl.poll();\n    drawSand();\n  };\n};\n\nlet snapshot = (universe, cb) => {\n  let canvas = document.createElement(\"canvas\");\n  canvas.width = universe.width() / 2;\n  canvas.height = universe.height() / 2;\n  let render = startWebGL({ universe, canvas, isSnapshot: true });\n  render();\n\n  return canvas.toDataURL(\"image/png\");\n};\n\nexport { startWebGL, snapshot };\n","const fps = new class {\n  constructor() {\n    this.fps = document.getElementById(\"fps\");\n    this.frames = [];\n    this.lastFrameTimeStamp = performance.now();\n  }\n\n  render() {\n    // Convert the delta time since the last frame render into a measure\n    // of frames per second.\n    const now = performance.now();\n    const delta = now - this.lastFrameTimeStamp;\n    this.lastFrameTimeStamp = now;\n    const fps = (1 / delta) * 1000;\n\n    // Save only the latest 100 timings.\n    this.frames.push(fps);\n    if (this.frames.length > 30) {\n      this.frames.shift();\n    }\n\n    // Find the max, min, and mean of our 100 latest timings.\n    let min = Infinity;\n    let max = -Infinity;\n    let sum = 0;\n    for (let i = 0; i < this.frames.length; i++) {\n      sum += this.frames[i];\n      min = Math.min(this.frames[i], min);\n      max = Math.max(this.frames[i], max);\n    }\n    let mean = sum / this.frames.length;\n\n    // Render the statistics.\n    this.fps.textContent = `FPS:${Math.round(mean)}`;\n  }\n}();\n\nexport { fps };\n","var storage;\nvar functions;\ntry {\n  storage = firebase.storage();\n  functions = firebase.functions();\n} catch (e) {}\nwindow.onload = () => {\n  functions = firebase.functions();\n  storage = firebase.storage();\n};\n\nexport { functions, storage };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Menu = ({ close, children }) => {\n  return (\n    <div className=\"menu-scrim\">\n      <div className={\"menu\"}>\n        {children}\n        <Link to=\"/\" className=\"x\" onClick={close}>\n          <button> x</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\nexport default Menu;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { memory } from \"../../crate/pkg/sandtable_bg\";\nimport { Species } from \"../../crate/pkg/sandtable\";\n\nimport { height, universe, width, reset } from \"../index.js\";\nimport { snapshot } from \"../render.js\";\nimport { functions, storage } from \"../api.js\";\n\nimport Menu from \"./menu\";\n\nconst ElementButton = (name, selectedElement, setElement) => {\n  let elementID = Species[name];\n  return (\n    <button\n      className={elementID == selectedElement ? \"selected\" : \"\"}\n      key={name}\n      onClick={() => {\n        setElement(elementID);\n      }}\n    >\n      {\"  \"}\n      {name}\n      {\"  \"}\n    </button>\n  );\n};\n\nlet sizeMap = [2, 5, 10, 18, 30, 45];\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      submissionMenuOpen: false,\n      paused: false,\n      submitting: false,\n      size: 2,\n      dataURL: {},\n      currentSubmission: null,\n      selectedElement: Species.Water\n    };\n    window.UI = this;\n    //if we start in the background, pause;\n    if (this.props.location.pathname !== \"/\") {\n      window.setTimeout(() => this.pause(), 50);\n    }\n\n    this.load();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.location.pathname === \"/\" &&\n      prevProps.location.pathname !== \"/\" &&\n      this.state.currentSubmission\n    ) {\n      window.location = `#${this.state.currentSubmission.id}`;\n      return;\n    }\n    if (\n      this.props.location.pathname !== \"/\" &&\n      prevProps.location.pathname == \"/\"\n    ) {\n      this.pause();\n    }\n    if (\n      prevProps.location.hash === \"\" ||\n      prevProps.location.hash != this.props.location.hash\n    ) {\n      this.load();\n    }\n  }\n  togglePause() {\n    window.paused = !this.state.paused;\n    this.setState({ paused: !this.state.paused });\n  }\n  play() {\n    window.paused = false;\n    this.setState({ paused: false });\n  }\n  pause() {\n    window.paused = true;\n    this.setState({ paused: true });\n  }\n\n  setSize(event, size) {\n    event.preventDefault();\n    this.setState({\n      size\n    });\n  }\n  reset() {\n    if (window.confirm(\"Reset?\")) {\n      this.play();\n      window.location = \"#\";\n      this.setState({ currentSubmission: null });\n      reset();\n    }\n  }\n  menu() {\n    this.pause();\n    this.setState({ submissionMenuOpen: true });\n  }\n\n  closeMenu() {\n    this.play();\n    this.setState({ submissionMenuOpen: false });\n  }\n  upload() {\n    let dataURL = snapshot(universe);\n    const cells = new Uint8Array(\n      memory.buffer,\n      universe.cells(),\n      width * height * 4\n    );\n\n    // Create canvas\n    let canvas = document.createElement(\"canvas\"),\n      context = canvas.getContext(\"2d\"),\n      imgData = context.createImageData(width, height);\n\n    canvas.height = height;\n    canvas.width = width;\n\n    // fill imgData with data from cells\n    for (var i = 0; i < width * height * 4; i++) {\n      if (i % 4 == 3) {\n        imgData.data[i] = 255;\n      } else {\n        imgData.data[i] = cells[i];\n      }\n    }\n    // put data to context at (0, 0)\n    context.putImageData(imgData, 0, 0);\n\n    let cellData = canvas.toDataURL(\"image/png\");\n\n    this.pause();\n    this.setState({\n      data: { dataURL, cells: cellData },\n      submissionMenuOpen: true\n    });\n  }\n  submit() {\n    let { title, data } = this.state;\n    let { dataURL, cells } = data;\n    let payload = { title, image: dataURL, cells };\n    this.setState({ submitting: true });\n\n    fetch(functions._url(\"api/creations\"), {\n      method: \"POST\",\n      body: JSON.stringify(payload), // data can be `string` or {object}!\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(response => {\n        console.log(\"Success:\", JSON.stringify(response));\n        this.play();\n      })\n      .catch(error => console.error(\"Error:\", error))\n      .then(() => {\n        this.setState({ submissionMenuOpen: false, submitting: false });\n      });\n  }\n\n  load() {\n    let { location } = this.props;\n    let id = location.hash.replace(/#/, \"\");\n    if (id === \"\") {\n      return;\n    }\n\n    if (this.state.currentSubmission && this.state.currentSubmission.id == id) {\n      return;\n    }\n\n    fetch(functions._url(`api/creations/${id}`), {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        storage\n          .refFromURL(\n            `gs://sandtable-8d0f7.appspot.com/creations/${data.id}.data.png`\n          )\n          .getDownloadURL()\n          .then(dlurl => {\n            fetch(dlurl, {\n              method: \"GET\"\n            })\n              .then(res => res.blob())\n              .then(blob => {\n                // console.log(response);\n                this.setState({ currentSubmission: { id, data } });\n\n                var url = URL.createObjectURL(blob);\n                var img = new Image();\n                img.src = url;\n                img.onload = () => {\n                  var canvas = document.createElement(\"canvas\");\n                  canvas.width = width;\n                  canvas.height = height;\n                  var ctx = canvas.getContext(\"2d\");\n                  ctx.drawImage(img, 0, 0);\n                  var imgData = ctx.getImageData(\n                    0,\n                    0,\n                    canvas.width,\n                    canvas.height\n                  );\n\n                  const cellsData = new Uint8Array(\n                    memory.buffer,\n                    universe.cells(),\n                    width * height * 4\n                  );\n\n                  reset();\n\n                  for (var i = 0; i < width * height * 4; i++) {\n                    cellsData[i] = imgData.data[i];\n                  }\n                  universe.flush_undos();\n                  universe.push_undo();\n                  this.pause();\n                };\n              })\n              .catch(error => console.error(\"Error:\", error));\n          });\n      })\n      .catch(error => {\n        console.error(\"Error:\", error);\n      });\n  }\n  incScore() {\n    let { currentSubmission } = this.state;\n    let { id } = currentSubmission;\n    // creations/:id/vote\n    fetch(functions._url(`api/creations/${id}/vote`), {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (currentSubmission != null) {\n          console.log(data);\n          this.setState({ currentSubmission: { ...currentSubmission, data } });\n        }\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    let { size, paused, selectedElement, currentSubmission } = this.state;\n    let hash =\n      currentSubmission && currentSubmission.id\n        ? `#${currentSubmission.id}`\n        : \"\";\n    return (\n      <React.Fragment>\n        <button\n          onClick={() => this.togglePause()}\n          className={paused ? \"selected\" : \"\"}\n        >\n          {paused ? (\n            <svg height=\"20\" width=\"20\" id=\"d\" viewBox=\"0 0 300 300\">\n              <polygon id=\"play\" points=\"0,0 , 300,150 0,300\" />\n            </svg>\n          ) : (\n            <svg height=\"20\" width=\"20\" id=\"d\" viewBox=\"0 0 300 300\">\n              <polygon id=\"bar2\" points=\"0,0 110,0 110,300 0,300\" />\n              <polygon id=\"bar1\" points=\"190,0 300,0 300,300 190,300\" />\n            </svg>\n          )}\n        </button>\n        <button onClick={() => this.upload()}>Upload</button>\n        <Link\n          to={{\n            pathname: \"/browse/\",\n            hash\n          }}\n        >\n          <button>Browse</button>\n        </Link>\n\n        <button onClick={() => this.reset()}>Reset</button>\n        <Link\n          to={{\n            pathname: \"/info/\",\n            hash\n          }}\n        >\n          <button>Info</button>\n        </Link>\n\n        {/* {paused && <button onClick={() => universe.tick()}>Tick</button>} */}\n        <span className=\"sizes\">\n          {sizeMap.map((v, i) => (\n            <button\n              key={i}\n              className={i == size ? \"selected\" : \"\"}\n              onClick={e => this.setSize(e, i)}\n              style={{ padding: \"0px\" }}\n            >\n              <svg height=\"23\" width=\"23\" id=\"d\" viewBox=\"0 0 100 100\">\n                <circle cx=\"50\" cy=\"50\" r={2 + v} />\n              </svg>\n            </button>\n          ))}\n        </span>\n\n        {Object.keys(Species).map(n =>\n          ElementButton(n, selectedElement, id =>\n            this.setState({ selectedElement: id })\n          )\n        )}\n        <button\n          className={-1 == selectedElement ? \"selected\" : \"\"}\n          key={name}\n          onClick={() => {\n            this.setState({ selectedElement: -1 });\n          }}\n        >\n          Wind\n        </button>\n\n        <button\n          onClick={() => {\n            reset();\n            universe.pop_undo();\n          }}\n          style={{ fontSize: 35 }}\n        >\n          ↜\n        </button>\n\n        {this.state.currentSubmission && (\n          <div className=\"submission-title\">\n            <button onClick={() => this.incScore()}>\n              +♡{this.state.currentSubmission.data.score}{\" \"}\n            </button>\n            {this.state.currentSubmission.data.title}\n          </div>\n        )}\n\n        {this.state.submissionMenuOpen && (\n          <Menu close={() => this.closeMenu()}>\n            <h4>Share your creation with the people!</h4>\n            <img src={this.state.data.dataURL} />\n            <div style={{ display: \"flex\" }}>\n              <input\n                placeholder=\"title\"\n                onChange={e => this.setState({ title: e.target.value })}\n              />\n              <button\n                disabled={this.state.submitting}\n                onClick={() => this.submit()}\n              >\n                Submit\n              </button>\n            </div>\n          </Menu>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport { sizeMap, Index };\n","import { height, universe, width } from \"./index.js\";\nimport { sizeMap } from \"./components/ui\";\nconst canvas = document.getElementById(\"sand-canvas\");\n\nconst eventDistance = (a, b) => {\n  return Math.sqrt(\n    Math.pow(a.clientX - b.clientX, 2) + Math.pow(a.clientY - b.clientY, 2),\n    2\n  );\n};\n\nconst magnitude = a => {\n  return Math.sqrt(Math.pow(a.clientX, 2) + Math.pow(a.clientY, 2), 2);\n};\n\nconst norm = a => {\n  let mag = magnitude(a);\n  return { clientX: a.clientX / mag, clientY: a.clientY / mag };\n};\nconst scale = (a, s) => {\n  return { clientX: a.clientX * s, clientY: a.clientY * s };\n};\nconst add = (a, b) => {\n  return { clientX: a.clientX + b.clientX, clientY: a.clientY + b.clientY };\n};\nconst sub = (a, b) => {\n  return { clientX: a.clientX - b.clientX, clientY: a.clientY - b.clientY };\n};\n\nlet painting = false;\nlet lastPaint = null;\nlet repeat = null;\ncanvas.addEventListener(\"mousedown\", event => {\n  event.preventDefault();\n  universe.push_undo();\n  painting = true;\n  clearInterval(repeat);\n  repeat = window.setInterval(() => paint(event), 100);\n  paint(event);\n  lastPaint = event;\n});\ndocument.body.addEventListener(\"mouseup\", event => {\n  clearInterval(repeat);\n  if (painting) {\n    event.preventDefault();\n    lastPaint = null;\n    painting = false;\n  }\n});\ncanvas.addEventListener(\"mousemove\", event => {\n  clearInterval(repeat);\n  smoothPaint(event);\n});\ncanvas.addEventListener(\"mouseleave\", event => {\n  clearInterval(repeat);\n  lastPaint = null;\n});\ncanvas.addEventListener(\"touchstart\", event => {\n  universe.push_undo();\n  event.preventDefault();\n  painting = true;\n  lastPaint = event;\n  handleTouches(event);\n});\ncanvas.addEventListener(\"touchend\", event => {\n  event.preventDefault();\n  lastPaint = null;\n  painting = false;\n  clearInterval(repeat);\n});\ncanvas.addEventListener(\"touchmove\", event => {\n  if (!window.paused) {\n    event.preventDefault();\n  }\n  clearInterval(repeat);\n  handleTouches(event);\n});\nfunction smoothPaint(event) {\n  clearInterval(repeat);\n  repeat = window.setInterval(() => paint(event), 100);\n  let startEvent = { clientX: event.clientX, clientY: event.clientY };\n  if (!painting) {\n    return;\n  }\n  let size = sizeMap[window.UI.state.size];\n  let i = 0;\n  paint(startEvent);\n  if (lastPaint) {\n    while (eventDistance(startEvent, lastPaint) > size / 2) {\n      let d = eventDistance(startEvent, lastPaint);\n      startEvent = add(\n        startEvent,\n        scale(norm(sub(lastPaint, event)), Math.min(size / 2, d))\n      );\n      i++;\n      if (i > 1000) {\n        break;\n      }\n      paint(startEvent);\n    }\n  }\n\n  lastPaint = event;\n}\n\nconst handleTouches = event => {\n  let touches = Array.from(event.touches);\n  if (touches.length == 1) {\n    smoothPaint(touches[0]);\n  } else {\n    touches.forEach(paint);\n  }\n};\n\nconst paint = event => {\n  if (!painting) {\n    return;\n  }\n  const boundingRect = canvas.getBoundingClientRect();\n\n  const scaleX = canvas.width / window.devicePixelRatio / boundingRect.width;\n  const scaleY = canvas.height / window.devicePixelRatio / boundingRect.height;\n\n  const canvasLeft = (event.clientX - boundingRect.left) * scaleX;\n  const canvasTop = (event.clientY - boundingRect.top) * scaleY;\n\n  const x = Math.min(Math.floor(canvasLeft), width - 1);\n  const y = Math.min(Math.floor(canvasTop), height - 1);\n  if (window.UI.state.selectedElement < 0) return;\n  universe.paint(\n    x,\n    y,\n    sizeMap[window.UI.state.size],\n    window.UI.state.selectedElement\n  );\n};\n","import React from \"react\";\n\nconst Info = () => {\n  return (\n    <div className=\"Info\">\n      <h1>sandspiel </h1>\n      <p>\n        Created by <a href=\"https://maxbittker.com\">max bittker</a>\n      </p>\n      <p>\n        Welcome, and thanks for coming by! I hope that you enjoy exploring this\n        small game, and it brings you some calm.{\" \"}\n      </p>\n      <p>\n        Growing up, \"falling sand\" games like this one provided me hours of\n        entertainment and imagination. I want to particularly thank ha55ii's{\" \"}\n        <a href=\"https://dan-ball.jp/en/javagame/dust/\">Powder Game</a> as the\n        primary inspiration for sandspiel.\n      </p>\n      <br />\n      <p>\n        You can follow sandspiel on twitter for updates and new uploads:\n        <a href=\"https://twitter.com/sandspiel_feed\">@sandspiel_feed</a>\n      </p>\n      <br />\n      <p>\n        If you'd like, you can view the{\" \"}\n        <a href=\"https://github.com/maxbittker/sandspiel\">source code</a> or{\" \"}\n        <a href=\"https://github.com/maxbittker/sandspiel/issues\">report bugs</a>{\" \"}\n        on github\n      </p>\n      <h2>FAQs</h2>\n      <p>(TODO: write some FAQs)</p>\n      If you have any other questions, feel free to reach out on twitter and\n      I'll try to answer!\n      <h2>Element Information:</h2>\n      <h4>Wall </h4>\n      Indestructible\n      <h4>Sand </h4>\n      Sinks in water\n      <h4>Water </h4>\n      Puts out fire\n      <h4>Stone </h4>\n      Forms arches, folds under pressure\n      <h4>Ice </h4>\n      Freezes Water, slippery!\n      <h4>Gas </h4>\n      Highly Flammable!\n      <h4>Cloner </h4>\n      Copies the first element it touches\n      <h4>Mite </h4>\n      Eats wood and plant, but loves dust! Slides on ice\n      <h4>Wood </h4>\n      Sturdy, but biodegradable\n      <h4>Plant </h4>\n      Thrives in wet enviroments\n      <h4>Fungus </h4>\n      Spreads over everything\n      <h4>Seed </h4>\n      Grows in sand\n      <h4>Fire </h4>\n      Hot!\n      <h4>Lava </h4>\n      Flammable and heavy\n      <h4>Acid </h4>\n      Corrodes other elements\n      <h4>Dust </h4>\n      Pretty, but dangerously explosive\n      <h4>Oil </h4>\n      Produces smoke\n      <h4>Firework </h4>\n      Explodes into copies of the first element it touches\n    </div>\n  );\n};\n\nexport default Info;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst HyperText = ({ text }) => {\n  let tokens = text.split(\" \");\n\n  let nodes = tokens.map((t, i) => {\n    if (t.startsWith(\"#\") && t.length > 1) {\n      return (\n        <React.Fragment key={i}>\n          <Link\n            to={{\n              pathname: \"/browse/search/\",\n              search: `?title=${t.slice(1)}`\n            }}\n          >\n            {t}\n          </Link>{\" \"}\n        </React.Fragment>\n      );\n    } else {\n      return t + \" \";\n    }\n  });\n  return <React.Fragment>{nodes}</React.Fragment>;\n};\nexport default HyperText;\n","import React from \"react\";\nimport { NavLink, Link, withRouter } from \"react-router-dom\";\n\nimport timeago from \"timeago.js\";\n\nimport HyperText from \"./hypertext.js\";\nimport { functions, storage } from \"../api.js\";\n\nconst ago = timeago();\n\nlet storageUrl =\n  \"https://firebasestorage.googleapis.com/v0/b/sandtable-8d0f7.appspot.com/o/creations%2F\";\n\nclass Submissions extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    let { submissions, browseVotes } = this.props;\n    return (\n      nextProps.submissions !== submissions ||\n      Object.keys(nextProps.browseVotes).length !==\n        Object.keys(browseVotes).length\n    );\n  }\n  render() {\n    let { submissions, voteFromBrowse, browseVotes } = this.props;\n\n    if (!submissions) {\n      return <div style={{ height: \"90vh\" }}>Loading Submissions...</div>;\n    }\n    if (submissions.length == 0) {\n      return <div style={{ height: \"90vh\" }}>Didn't find anything!</div>;\n    }\n\n    return (\n      <div className=\"submissions\">\n        {submissions.map(submission => {\n          let displayTime = new Date(\n            submission.data.timestamp\n          ).toLocaleDateString();\n          let msAgo =\n            new Date().getTime() -\n            new Date(submission.data.timestamp).getTime();\n\n          if (msAgo < 24 * 60 * 60 * 1000) {\n            displayTime = ago.format(submission.data.timestamp);\n          }\n          return (\n            <div key={submission.id} className=\"submission\">\n              <Link\n                className=\"img-link\"\n                to={{\n                  pathname: \"/\",\n                  hash: `#${submission.id}`\n                }}\n                onClick={() => {\n                  window.UI.setState(\n                    () => ({\n                      currentSubmission: null\n                    }),\n                    window.UI.load\n                  );\n                }}\n              >\n                <img src={`${storageUrl}${submission.data.id}.png?alt=media`} />\n              </Link>\n              <div style={{ width: \"50%\" }}>\n                <h3 style={{ flexGrow: 1, wordWrap: \"break-word\" }}>\n                  <HyperText text={submission.data.title} />\n                </h3>\n                <h3 onClick={() => voteFromBrowse(submission)}>\n                  <span className=\"heart\">\n                    {browseVotes[submission.id] ? \"🖤\" : \"♡\"}\n                  </span>\n                  {browseVotes[submission.id] || submission.data.score}\n                </h3>\n                <h4>{displayTime}</h4>\n                <Link\n                  to={{\n                    pathname: \"/\",\n                    hash: `#${submission.id}`\n                  }}\n                  onClick={() => {\n                    window.UI.setState(\n                      () => ({\n                        currentSubmission: null\n                      }),\n                      window.UI.load\n                    );\n                  }}\n                >\n                  <button className=\"load\">Load</button>\n                </Link>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nclass Browse extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      paused: false,\n      submitting: false,\n      dataURL: {},\n      submissions: null,\n      browseVotes: {},\n      search: \"\"\n    };\n  }\n  componentWillMount() {\n    console.log(\"mounted\");\n    this.loadSubmissions();\n  }\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.location.pathname != this.props.location.pathname ||\n      prevProps.location.search != this.props.location.search\n    ) {\n      this.loadSubmissions();\n    }\n  }\n  togglePause() {\n    window.paused = !this.state.paused;\n    this.setState({ paused: !this.state.paused });\n  }\n\n  setSize(event, size) {\n    event.preventDefault();\n    this.setState({\n      size\n    });\n  }\n\n  loadSubmissions() {\n    let { location } = this.props;\n    if (location.search.startsWith(\"?title=\")) {\n      // to load deep urls with a search query.\n      this.setState({ search: this.props.location.search.slice(7) });\n    }\n    let param = \"\";\n\n    if (location.pathname.startsWith(\"/browse/top/\")) {\n      param = \"?q=score\";\n    }\n    if (location.pathname.startsWith(\"/browse/top-recent/\")) {\n      param = \"?q=toprecent\";\n    }\n    if (location.pathname.startsWith(\"/browse/search/\")) {\n      param = location.search;\n    }\n\n    this.setState({ submissions: null });\n    fetch(functions._url(\"api/creations\") + param, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(response => {\n        this.setState({ submissions: response });\n        // this.pause();\n      })\n      .catch(error => {\n        this.setState({ submissions: false });\n        console.error(\"Error:\", error);\n      });\n  }\n\n  voteFromBrowse(submission) {\n    // creations/:id/vote\n    fetch(functions._url(`api/creations/${submission.id}/vote`), {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.setState(({ browseVotes }) => ({\n          browseVotes: { [submission.id]: data.score, ...browseVotes }\n        }));\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n  render() {\n    const { search, submissions, browseVotes } = this.state;\n    return (\n      <React.Fragment>\n        <NavLink exact to=\"/browse/\">\n          <button>New</button>\n        </NavLink>\n        <NavLink to=\"/browse/top-recent/\">\n          <button>Top Recent</button>\n        </NavLink>\n        <NavLink to=\"/browse/top/\">\n          <button>Top All Time</button>\n        </NavLink>\n        <span style={{ display: \"inline-block\" }}>\n          <input\n            value={search}\n            onChange={e => this.setState({ search: e.target.value })}\n            onKeyDown={e =>\n              e.keyCode == 13 &&\n              this.props.history.push(`/browse/search/?title=${search}`)\n            }\n            placeholder=\"search\"\n          />\n          {search && (\n            <NavLink\n              to={{\n                pathname: \"/browse/search/\",\n                search: `?title=${search}`\n              }}\n            >\n              <button>Search</button>\n            </NavLink>\n          )}\n        </span>\n\n        <Submissions\n          submissions={submissions}\n          voteFromBrowse={submission => this.voteFromBrowse(submission)}\n          browseVotes={browseVotes}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(Browse);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport Info from \"./components/info\";\nimport { Index } from \"./components/ui\";\nimport Browse from \"./components/browse\";\nimport Menu from \"./components/menu\";\n\nlet sizeMap = [2, 5, 10, 18, 30, 45];\n\nfunction BrowseRouter({ match, location }) {\n  return (\n    <Menu>\n      <Browse location={location} />\n    </Menu>\n  );\n}\n\nfunction AppRouter() {\n  return (\n    <Router>\n      <Route path=\"/\" component={Index} />\n      <Route\n        exact\n        path=\"/info/\"\n        component={() => (\n          <Menu>\n            <Info />\n          </Menu>\n        )}\n      />\n      <Route path=\"/browse\" component={BrowseRouter} />\n    </Router>\n  );\n}\n\nReactDOM.render(<AppRouter />, document.getElementById(\"ui\"));\n\nexport { sizeMap };\n","let baseVertex = require(\"./glsl/baseVertex.glsl\");\nlet clearShaderString = require(\"./glsl/clear.glsl\");\nlet displayShaderString = require(\"./glsl/display.glsl\");\nlet splatShaderString = require(\"./glsl/splat.glsl\");\nlet advectionManualFilteringShaderString = require(\"./glsl/advectionManualFilter.glsl\");\nlet advectionShaderString = require(\"./glsl/advection.glsl\");\nlet divergenceShaderString = require(\"./glsl/divergence.glsl\");\nlet curlShaderString = require(\"./glsl/curl.glsl\");\nlet vorticityShaderString = require(\"./glsl/vorticity.glsl\");\nlet pressureShaderString = require(\"./glsl/pressure.glsl\");\nlet gradientSubtractShaderString = require(\"./glsl/gradientSubtract.glsl\");\nlet velocityOutShaderString = require(\"./glsl/velocityOut.glsl\");\n\nfunction compileShaders(gl) {\n  function compileShader(type, source) {\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS))\n      throw gl.getShaderInfoLog(shader);\n\n    return shader;\n  }\n\n  const baseVertexShader = compileShader(gl.VERTEX_SHADER, baseVertex);\n  const clearShader = compileShader(gl.FRAGMENT_SHADER, clearShaderString);\n  const displayShader = compileShader(gl.FRAGMENT_SHADER, displayShaderString);\n  const splatShader = compileShader(gl.FRAGMENT_SHADER, splatShaderString);\n  const advectionManualFilteringShader = compileShader(\n    gl.FRAGMENT_SHADER,\n    advectionManualFilteringShaderString\n  );\n  const advectionShader = compileShader(\n    gl.FRAGMENT_SHADER,\n    advectionShaderString\n  );\n  const divergenceShader = compileShader(\n    gl.FRAGMENT_SHADER,\n    divergenceShaderString\n  );\n  const curlShader = compileShader(gl.FRAGMENT_SHADER, curlShaderString);\n  const vorticityShader = compileShader(\n    gl.FRAGMENT_SHADER,\n    vorticityShaderString\n  );\n  const pressureShader = compileShader(\n    gl.FRAGMENT_SHADER,\n    pressureShaderString\n  );\n  const gradientSubtractShader = compileShader(\n    gl.FRAGMENT_SHADER,\n    gradientSubtractShaderString\n  );\n  const velocityOutShader = compileShader(\n    gl.FRAGMENT_SHADER,\n    velocityOutShaderString\n  );\n\n  return {\n    baseVertexShader,\n    clearShader,\n    displayShader,\n    splatShader,\n    advectionManualFilteringShader,\n    advectionShader,\n    divergenceShader,\n    curlShader,\n    vorticityShader,\n    pressureShader,\n    gradientSubtractShader,\n    velocityOutShader\n  };\n}\n\nexport { compileShaders };\n","let ratio = 4;\nif (window.devicePixelRatio > 1) {\n  ratio = 3;\n}\nexport { ratio };\n","// MIT License\n\n// Copyright (c) 2017 Pavel Dobryakov\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\"use strict\";\nimport * as dat from \"dat.gui\";\nimport { memory } from \"../crate/pkg/sandtable_bg\";\nimport { compileShaders } from \"./fluidShaders\";\nimport { ratio } from \"./constants\";\nconst canvas = document.getElementById(\"fluid-canvas\");\nconst sandCanvas = document.getElementById(\"sand-canvas\");\n\nlet fluidColor = [1, 1, 0.8];\n\nfunction startFluid({ universe }) {\n  canvas.width = universe.width();\n  canvas.height = universe.height();\n  let config = {\n    TEXTURE_DOWNSAMPLE: 0,\n    DENSITY_DISSIPATION: 0.98,\n    VELOCITY_DISSIPATION: 0.99,\n    PRESSURE_DISSIPATION: 0.8,\n    PRESSURE_ITERATIONS: 25,\n    CURL: 30,\n    SPLAT_RADIUS: 0.005\n  };\n\n  let pointers = [];\n  let splatStack = [];\n\n  const { gl, ext } = getWebGLContext(canvas);\n  let {\n    baseVertexShader,\n    clearShader,\n    displayShader,\n    splatShader,\n    advectionManualFilteringShader,\n    advectionShader,\n    divergenceShader,\n    curlShader,\n    vorticityShader,\n    pressureShader,\n    gradientSubtractShader,\n    velocityOutShader\n  } = compileShaders(gl);\n  startGUI();\n\n  function getWebGLContext(canvas) {\n    const params = {\n      alpha: false,\n      depth: false,\n      stencil: false,\n      antialias: false,\n      preserveDrawingBuffer: false\n    };\n\n    let gl = canvas.getContext(\"webgl2\", params);\n    const isWebGL2 = !!gl;\n    if (!isWebGL2)\n      gl =\n        canvas.getContext(\"webgl\", params) ||\n        canvas.getContext(\"experimental-webgl\", params);\n\n    let halfFloat;\n    let supportLinearFiltering;\n    if (isWebGL2) {\n      gl.getExtension(\"EXT_color_buffer_float\");\n      supportLinearFiltering = gl.getExtension(\"OES_texture_float_linear\");\n    } else {\n      halfFloat = gl.getExtension(\"OES_texture_half_float\");\n      supportLinearFiltering = gl.getExtension(\"OES_texture_half_float_linear\");\n    }\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n\n    const halfFloatTexType = isWebGL2\n      ? gl.HALF_FLOAT\n      : halfFloat.HALF_FLOAT_OES;\n    let formatRGBA;\n    let formatRG;\n    let formatR;\n\n    if (isWebGL2) {\n      formatRGBA = getSupportedFormat(\n        gl,\n        gl.RGBA16F,\n        gl.RGBA,\n        halfFloatTexType\n      );\n      formatRG = getSupportedFormat(gl, gl.RG16F, gl.RG, halfFloatTexType);\n      formatR = getSupportedFormat(gl, gl.R16F, gl.RED, halfFloatTexType);\n    } else {\n      formatRGBA = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\n      formatRG = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\n      formatR = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\n    }\n\n    return {\n      gl,\n      ext: {\n        formatRGBA,\n        formatRG,\n        formatR,\n        halfFloatTexType,\n        supportLinearFiltering\n      }\n    };\n  }\n\n  function getSupportedFormat(gl, internalFormat, format, type) {\n    if (!supportRenderTextureFormat(gl, internalFormat, format, type)) {\n      switch (internalFormat) {\n        case gl.R16F:\n          return getSupportedFormat(gl, gl.RG16F, gl.RG, type);\n        case gl.RG16F:\n          return getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, type);\n        default:\n          return null;\n      }\n    }\n\n    return {\n      internalFormat,\n      format\n    };\n  }\n\n  function supportRenderTextureFormat(gl, internalFormat, format, type) {\n    let texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      internalFormat,\n      4,\n      4,\n      0,\n      format,\n      type,\n      null\n    );\n\n    let fbo = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      texture,\n      0\n    );\n\n    const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n    if (status != gl.FRAMEBUFFER_COMPLETE) return false;\n    return true;\n  }\n\n  function startGUI() {\n    var gui = new dat.GUI({ width: 300 });\n    gui\n      .add(config, \"TEXTURE_DOWNSAMPLE\", { Full: 0, Half: 1, Quarter: 2 })\n      .name(\"resolution\")\n      .onFinishChange(initFramebuffers);\n    gui.add(config, \"DENSITY_DISSIPATION\", 0.9, 1.0).name(\"density diffusion\");\n    gui\n      .add(config, \"VELOCITY_DISSIPATION\", 0.9, 1.0)\n      .name(\"velocity diffusion\");\n    gui\n      .add(config, \"PRESSURE_DISSIPATION\", 0.0, 1.0)\n      .name(\"pressure diffusion\");\n    gui.add(config, \"PRESSURE_ITERATIONS\", 1, 60).name(\"iterations\");\n    gui\n      .add(config, \"CURL\", 0, 50)\n      .name(\"vorticity\")\n      .step(1);\n    gui.add(config, \"SPLAT_RADIUS\", 0.0001, 0.01).name(\"splat radius\");\n\n    gui\n      .add(\n        {\n          fun: () => {\n            splatStack.push(parseInt(Math.random() * 20) + 5);\n          }\n        },\n        \"fun\"\n      )\n      .name(\"Random splats\");\n\n    gui.close();\n  }\n\n  function pointerPrototype() {\n    this.id = -1;\n    this.x = 0;\n    this.y = 0;\n    this.dx = 0;\n    this.dy = 0;\n    this.down = false;\n    this.moved = false;\n    this.color = [30, 300, 30];\n  }\n\n  pointers.push(new pointerPrototype());\n\n  class GLProgram {\n    constructor(vertexShader, fragmentShader) {\n      this.uniforms = {};\n      this.program = gl.createProgram();\n\n      gl.attachShader(this.program, vertexShader);\n      gl.attachShader(this.program, fragmentShader);\n      gl.linkProgram(this.program);\n\n      if (!gl.getProgramParameter(this.program, gl.LINK_STATUS))\n        throw gl.getProgramInfoLog(this.program);\n\n      const uniformCount = gl.getProgramParameter(\n        this.program,\n        gl.ACTIVE_UNIFORMS\n      );\n      for (let i = 0; i < uniformCount; i++) {\n        const uniformName = gl.getActiveUniform(this.program, i).name;\n        this.uniforms[uniformName] = gl.getUniformLocation(\n          this.program,\n          uniformName\n        );\n      }\n    }\n\n    bind() {\n      gl.useProgram(this.program);\n    }\n  }\n\n  let texWidth;\n  let texHeight;\n  let density;\n  let velocity;\n  let velocityOut;\n  let burns;\n  let cells;\n  let divergence;\n  let curl;\n  let pressure;\n  initFramebuffers();\n\n  const clearProgram = new GLProgram(baseVertexShader, clearShader);\n  const displayProgram = new GLProgram(baseVertexShader, displayShader);\n  const velocityOutProgram = new GLProgram(baseVertexShader, velocityOutShader);\n  const splatProgram = new GLProgram(baseVertexShader, splatShader);\n  const advectionProgram = new GLProgram(\n    baseVertexShader,\n    ext.supportLinearFiltering\n      ? advectionShader\n      : advectionManualFilteringShader\n  );\n  const divergenceProgram = new GLProgram(baseVertexShader, divergenceShader);\n  const curlProgram = new GLProgram(baseVertexShader, curlShader);\n  const vorticityProgram = new GLProgram(baseVertexShader, vorticityShader);\n  const pressureProgram = new GLProgram(baseVertexShader, pressureShader);\n  const gradientSubtractProgram = new GLProgram(\n    baseVertexShader,\n    gradientSubtractShader\n  );\n\n  function initFramebuffers() {\n    texWidth = gl.drawingBufferWidth >> config.TEXTURE_DOWNSAMPLE;\n    texHeight = gl.drawingBufferHeight >> config.TEXTURE_DOWNSAMPLE;\n\n    const texType = ext.halfFloatTexType;\n    const rgba = ext.formatRGBA;\n    const rg = ext.formatRG;\n    const r = ext.formatR;\n\n    velocity = createDoubleFBO(\n      0,\n      texWidth,\n      texHeight,\n      rg.internalFormat,\n      rg.format,\n      texType,\n      ext.supportLinearFiltering ? gl.LINEAR : gl.NEAREST\n    );\n    density = createDoubleFBO(\n      2,\n      texWidth,\n      texHeight,\n      rgba.internalFormat,\n      rgba.format,\n      texType,\n      ext.supportLinearFiltering ? gl.LINEAR : gl.NEAREST\n    );\n    divergence = createFBO(\n      4,\n      texWidth,\n      texHeight,\n      r.internalFormat,\n      r.format,\n      texType,\n      gl.NEAREST\n    );\n    curl = createFBO(\n      5,\n      texWidth,\n      texHeight,\n      r.internalFormat,\n      r.format,\n      texType,\n      gl.NEAREST\n    );\n    pressure = createDoubleFBO(\n      6,\n      texWidth,\n      texHeight,\n      r.internalFormat,\n      r.format,\n      texType,\n      gl.NEAREST\n    );\n    burns = createFBO(\n      8,\n      texWidth,\n      texHeight,\n      rg.internalFormat,\n      rg.format,\n      texType,\n      ext.supportLinearFiltering ? gl.LINEAR : gl.NEAREST\n    );\n    cells = createFBO(\n      10,\n      texWidth,\n      texHeight,\n      rg.internalFormat,\n      rg.format,\n      texType,\n      ext.supportLinearFiltering ? gl.LINEAR : gl.NEAREST\n    );\n    velocityOut = createFBO(\n      9,\n      texWidth,\n      texHeight,\n      gl.RGBA,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      ext.supportLinearFiltering ? gl.LINEAR : gl.NEAREST\n    );\n  }\n\n  function createFBO(texId, w, h, internalFormat, format, type, param) {\n    gl.activeTexture(gl.TEXTURE0 + texId);\n    let texture = gl.createTexture();\n\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, param);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, param);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      internalFormat,\n      w,\n      h,\n      0,\n      format,\n      type,\n      null\n    );\n\n    let fbo = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      texture,\n      0\n    );\n    gl.viewport(0, 0, w, h);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    return [texture, fbo, texId];\n  }\n\n  function createDoubleFBO(texId, w, h, internalFormat, format, type, param) {\n    let fbo1 = createFBO(texId, w, h, internalFormat, format, type, param);\n    let fbo2 = createFBO(texId + 1, w, h, internalFormat, format, type, param);\n\n    return {\n      get read() {\n        return fbo1;\n      },\n      get write() {\n        return fbo2;\n      },\n      swap() {\n        let temp = fbo1;\n        fbo1 = fbo2;\n        fbo2 = temp;\n      }\n    };\n  }\n\n  const blit = (() => {\n    gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array([-1, -1, -1, 1, 1, 1, 1, -1]),\n      gl.STATIC_DRAW\n    );\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gl.createBuffer());\n    gl.bufferData(\n      gl.ELEMENT_ARRAY_BUFFER,\n      new Uint16Array([0, 1, 2, 0, 2, 3]),\n      gl.STATIC_DRAW\n    );\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(0);\n\n    return destination => {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, destination);\n      gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n    };\n  })();\n\n  let lastTime = Date.now();\n\n  // multipleSplats(parseInt(Math.random() * 20) + 5);\n\n  const width = universe.width();\n  const height = universe.height();\n\n  let winds = new Uint8Array(\n    memory.buffer,\n    universe.winds(),\n    width * height * 4\n  );\n\n  let burnsData = new Uint8Array(\n    memory.buffer,\n    universe.burns(),\n    width * height * 4\n  );\n\n  let cellsData = new Uint8Array(\n    memory.buffer,\n    universe.cells(),\n    width * height * 4\n  );\n\n  function reset() {\n    clearProgram.bind();\n\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, burns[0]);\n    gl.uniform1i(clearProgram.uniforms.uWind, texUnit++);\n\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, density.read[0]);\n    gl.uniform1i(clearProgram.uniforms.uTexture, texUnit++);\n\n    gl.uniform1f(clearProgram.uniforms.value, 0);\n\n    blit(density.write[1]);\n    density.swap();\n\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, burns[0]);\n    gl.uniform1i(clearProgram.uniforms.uWind, texUnit++);\n\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, pressure.read[0]);\n    gl.uniform1i(clearProgram.uniforms.uTexture, texUnit++);\n\n    gl.uniform1f(clearProgram.uniforms.value, 0);\n\n    blit(pressure.write[1]);\n    pressure.swap();\n\n    texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, burns[0]);\n    gl.uniform1i(clearProgram.uniforms.uWind, texUnit++);\n\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, velocity.read[0]);\n    gl.uniform1i(clearProgram.uniforms.uTexture, texUnit++);\n\n    gl.uniform1f(clearProgram.uniforms.value, 0);\n\n    blit(velocity.write[1]);\n    velocity.swap();\n  }\n\n  function update() {\n    winds = new Uint8Array(memory.buffer, universe.winds(), width * height * 4);\n\n    burnsData = new Uint8Array(\n      memory.buffer,\n      universe.burns(),\n      width * height * 4\n    );\n\n    let cell_pointer = universe.cells();\n    cellsData = new Uint8Array(memory.buffer, cell_pointer, width * height * 4);\n\n    // resizeCanvas();\n\n    const dt = Math.min((Date.now() - lastTime) / 1000, 0.016);\n    lastTime = Date.now();\n\n    gl.viewport(0, 0, texWidth, texHeight);\n\n    if (splatStack.length > 0) multipleSplats(splatStack);\n    // multipleSplats(1);\n\n    // ADVECTION\n    // velocityRead ->\n    // velocityWrite\n    advectionProgram.bind();\n\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, velocity.read[0]);\n    gl.uniform1i(advectionProgram.uniforms.uVelocity, texUnit++);\n\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, velocity.read[0]);\n    gl.uniform1i(advectionProgram.uniforms.uSource, texUnit++);\n\n    gl.uniform2f(\n      advectionProgram.uniforms.texelSize,\n      1.0 / texWidth,\n      1.0 / texHeight\n    );\n    // gl.uniform1i(advectionProgram.uniforms.uVelocity, velocity.read[2]);\n    // gl.uniform1i(advectionProgram.uniforms.uSource, velocity.read[2]);\n    gl.uniform1f(advectionProgram.uniforms.dt, dt);\n    gl.uniform1f(\n      advectionProgram.uniforms.dissipation,\n      config.VELOCITY_DISSIPATION\n    );\n    blit(velocity.write[1]);\n    velocity.swap();\n\n    gl.bindTexture(gl.TEXTURE_2D, burns[0]);\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      width,\n      height,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      burnsData\n    );\n\n    gl.bindTexture(gl.TEXTURE_2D, cells[0]);\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      width,\n      height,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      cellsData\n    );\n\n    // ADVECTION\n    // burns\n    // velocityRead\n    // densityRead ->\n    // densityWrite\n\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, burns[0]);\n    gl.uniform1i(advectionProgram.uniforms.uWind, texUnit++);\n\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, velocity.read[0]);\n    gl.uniform1i(advectionProgram.uniforms.uVelocity, texUnit++);\n\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, density.read[0]);\n    gl.uniform1i(advectionProgram.uniforms.uSource, texUnit++);\n\n    // gl.uniform1i(advectionProgram.uniforms.uWind, burns[2]);\n    // gl.uniform1i(advectionProgram.uniforms.uVelocity, velocity.read[2]);\n    // gl.uniform1i(advectionProgram.uniforms.uSource, density.read[2]);\n    gl.uniform1f(\n      advectionProgram.uniforms.dissipation,\n      config.DENSITY_DISSIPATION\n    );\n    blit(density.write[1]);\n    density.swap();\n\n    // Splat\n    // velocityRead -> velocityWrite\n    // densityRead -> velocityWrite\n    for (let i = 0; i < pointers.length; i++) {\n      const pointer = pointers[i];\n      if (pointer.moved && window.UI.state.selectedElement < 0) {\n        splat(pointer.x, pointer.y, pointer.dx, pointer.dy, pointer.color);\n        pointer.moved = false;\n      }\n    }\n\n    // CURL\n    // velocityRead -> curl\n    curlProgram.bind();\n\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, velocity.read[0]);\n    gl.uniform1i(curlProgram.uniforms.uVelocity, texUnit++);\n\n    gl.uniform2f(\n      curlProgram.uniforms.texelSize,\n      1.0 / texWidth,\n      1.0 / texHeight\n    );\n    // gl.uniform1i(curlProgram.uniforms.uVelocity, velocity.read[2]);\n    blit(curl[1]);\n\n    // VORTICITY\n    // velocityRead\n    // curl ->\n    // velocityWrite\n\n    vorticityProgram.bind();\n\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, velocity.read[0]);\n    gl.uniform1i(vorticityProgram.uniforms.uVelocity, texUnit++);\n\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, curl[0]);\n    gl.uniform1i(vorticityProgram.uniforms.uCurl, texUnit++);\n\n    gl.uniform2f(\n      vorticityProgram.uniforms.texelSize,\n      1.0 / texWidth,\n      1.0 / texHeight\n    );\n\n    // gl.uniform1i(vorticityProgram.uniforms.uVelocity, velocity.read[2]);\n    // gl.uniform1i(vorticityProgram.uniforms.uCurl, curl[2]);\n    gl.uniform1f(vorticityProgram.uniforms.curl, config.CURL);\n    gl.uniform1f(vorticityProgram.uniforms.dt, dt);\n    blit(velocity.write[1]);\n    velocity.swap();\n\n    // DIVERGENCE\n    // velocityRead ->\n    // divergence\n    divergenceProgram.bind();\n\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, velocity.read[0]);\n    gl.uniform1i(divergenceProgram.uniforms.uVelocity, texUnit++);\n\n    gl.uniform2f(\n      divergenceProgram.uniforms.texelSize,\n      1.0 / texWidth,\n      1.0 / texHeight\n    );\n    // gl.uniform1i(divergenceProgram.uniforms.uVelocity, velocity.read[2]);\n    blit(divergence[1]);\n\n    // CLEAR\n    // burns\n    // pressureRead->\n    // pressureWrite\n    clearProgram.bind();\n\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, burns[0]);\n    gl.uniform1i(clearProgram.uniforms.uWind, texUnit++);\n\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, pressure.read[0]);\n    gl.uniform1i(clearProgram.uniforms.uTexture, texUnit++);\n\n    let pressureTexId = texUnit - 1;\n\n    // let pressureTexId = pressure.read[2];\n    // gl.activeTexture(gl.TEXTURE0 + pressureTexId);\n    // gl.bindTexture(gl.TEXTURE_2D, pressure.read[0]);\n\n    // gl.uniform1i(clearProgram.uniforms.uWind, burns[2]);\n    // gl.uniform1i(clearProgram.uniforms.uTexture, pressureTexId);\n    gl.uniform1f(clearProgram.uniforms.value, config.PRESSURE_DISSIPATION);\n\n    blit(pressure.write[1]);\n    pressure.swap();\n\n    // PRESSURE\n    // divergence\n    // pressureRead->\n    // pressureWrite\n    pressureProgram.bind();\n    //TODO\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, divergence[0]);\n    gl.uniform1i(pressureProgram.uniforms.uDivergence, texUnit++);\n\n    // gl.activeTexture(gl.TEXTURE0 + texUnit);\n    // gl.bindTexture(gl.TEXTURE_2D, pressure.read[0]);\n    // gl.uniform1i(clearProgram.uniforms.uTexture, texUnit++);\n\n    gl.uniform2f(\n      pressureProgram.uniforms.texelSize,\n      1.0 / texWidth,\n      1.0 / texHeight\n    );\n    // gl.uniform1i(pressureProgram.uniforms.uDivergence, divergence[2]);\n    pressureTexId = pressure.read[2];\n    gl.uniform1i(pressureProgram.uniforms.uPressure, pressureTexId);\n    gl.activeTexture(gl.TEXTURE0 + pressureTexId);\n    for (let i = 0; i < config.PRESSURE_ITERATIONS; i++) {\n      gl.bindTexture(gl.TEXTURE_2D, pressure.read[0]);\n      blit(pressure.write[1]);\n      pressure.swap();\n    }\n\n    // VELOCITY OUT\n    // velocityRead\n    // pressureRead ->\n    // velocityOut\n    velocityOutProgram.bind();\n\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, velocity.read[0]);\n    gl.uniform1i(velocityOutProgram.uniforms.uTexture, texUnit++);\n\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, pressure.read[0]);\n    gl.uniform1i(velocityOutProgram.uniforms.uPressure, texUnit++);\n\n    // gl.uniform1i(velocityOutProgram.uniforms.uTexture, velocity.read[2]);\n    // gl.uniform1i(velocityOutProgram.uniforms.uPressure, pressure.read[2]);\n    blit(velocityOut[1]);\n    gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, winds);\n\n    // GRADIENT SUBTRACT\n    // burns\n    // pressureRead\n    // velocityRead\n    // sands ->\n    // velocityWrite\n    gradientSubtractProgram.bind();\n\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, burns[0]);\n    gl.uniform1i(gradientSubtractProgram.uniforms.uWind, texUnit++);\n\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, pressure.read[0]);\n    gl.uniform1i(gradientSubtractProgram.uniforms.uPressure, texUnit++);\n\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, velocity.read[0]);\n    gl.uniform1i(gradientSubtractProgram.uniforms.uVelocity, texUnit++);\n\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, cells[0]);\n    gl.uniform1i(gradientSubtractProgram.uniforms.uCells, texUnit++);\n\n    gl.uniform2f(\n      gradientSubtractProgram.uniforms.texelSize,\n      1.0 / texWidth,\n      1.0 / texHeight\n    );\n\n    // gl.uniform1i(gradientSubtractProgram.uniforms.uWind, burns[2]);\n    // gl.uniform1i(gradientSubtractProgram.uniforms.uPressure, pressure.read[2]);\n    // gl.uniform1i(gradientSubtractProgram.uniforms.uVelocity, velocity.read[2]);\n    blit(velocity.write[1]);\n    velocity.swap();\n\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    // DISPLAY\n    // density ->\n    // null/renderbuffer?\n    displayProgram.bind();\n\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, density.read[0]);\n    gl.uniform1i(displayProgram.uniforms.uTexture, texUnit++);\n\n    // gl.uniform1i(displayProgram.uniforms.uTexture, density.read[2]);\n\n    blit(null);\n  }\n\n  function splat(x, y, dx, dy, color) {\n    splatProgram.bind();\n\n    var texUnit = 0;\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, velocity.read[0]);\n    gl.uniform1i(splatProgram.uniforms.uTarget, texUnit++);\n\n    // gl.uniform1i(splatProgram.uniforms.uTarget, velocity.read[2]);\n    gl.uniform1f(\n      splatProgram.uniforms.aspectRatio,\n      canvas.width / canvas.height\n    );\n    gl.uniform2f(\n      splatProgram.uniforms.point,\n      x / canvas.width,\n      1.0 - y / canvas.height\n    );\n    gl.uniform3f(splatProgram.uniforms.color, dx, -dy, 1.0);\n    gl.uniform1f(\n      splatProgram.uniforms.radius,\n      (window.UI.state.size + 1) / 700\n    );\n    blit(velocity.write[1]);\n    velocity.swap();\n\n    gl.activeTexture(gl.TEXTURE0 + texUnit);\n    gl.bindTexture(gl.TEXTURE_2D, density.read[0]);\n    gl.uniform1i(splatProgram.uniforms.uTarget, texUnit++);\n\n    // gl.uniform1i(splatProgram.uniforms.uTarget, density.read[2]);\n    gl.uniform3f(splatProgram.uniforms.color, color[0], color[1], color[2]);\n    blit(density.write[1]);\n    density.swap();\n  }\n\n  function multipleSplats(amount) {\n    for (let i = 0; i < amount; i++) {\n      const color = fluidColor;\n      const x = canvas.width * Math.random();\n      const y = canvas.height * Math.random();\n      const dx = 1000 * (Math.random() - 0.5);\n      const dy = 1000 * (Math.random() - 0.5);\n      splat(x, y, dx, dy, color);\n    }\n  }\n\n  let boundingRect;\n  let scaleX;\n  let scaleY;\n\n  let resize = () => {\n    boundingRect = sandCanvas.getBoundingClientRect();\n    scaleX = sandCanvas.width / window.devicePixelRatio / boundingRect.width;\n    scaleY = sandCanvas.height / window.devicePixelRatio / boundingRect.height;\n  };\n  resize();\n  window.addEventListener(\"resize\", resize);\n\n  sandCanvas.addEventListener(\"mousemove\", e => {\n    const canvasLeft = (e.clientX - boundingRect.left) * scaleX;\n    const canvasTop = (e.clientY - boundingRect.top) * scaleY;\n    pointers[0].moved = pointers[0].down;\n    pointers[0].dx = (canvasLeft - pointers[0].x) * 10.0;\n    pointers[0].dy = (canvasTop - pointers[0].y) * 10.0;\n    pointers[0].x = canvasLeft;\n    pointers[0].y = canvasTop;\n  });\n\n  sandCanvas.addEventListener(\n    \"touchmove\",\n    e => {\n      if (!window.paused) {\n        e.preventDefault();\n      }\n      const touches = e.targetTouches;\n      for (let i = 0; i < touches.length; i++) {\n        let pointer = pointers[i];\n        pointer.moved = pointer.down;\n\n        const canvasLeft = (touches[i].clientX - boundingRect.left) * scaleX;\n        const canvasTop = (touches[i].clientY - boundingRect.top) * scaleY;\n\n        pointer.dx = (canvasLeft - pointer.x) * 10.0;\n        pointer.dy = (canvasTop - pointer.y) * 10.0;\n        pointer.x = canvasLeft;\n        pointer.y = canvasTop;\n      }\n    },\n    false\n  );\n\n  sandCanvas.addEventListener(\"mousedown\", () => {\n    pointers[0].down = true;\n    pointers[0].color = fluidColor;\n  });\n\n  sandCanvas.addEventListener(\"touchstart\", e => {\n    e.preventDefault();\n    const touches = e.targetTouches;\n    for (let i = 0; i < touches.length; i++) {\n      if (i >= pointers.length) pointers.push(new pointerPrototype());\n\n      const canvasLeft = (touches[i].clientX - boundingRect.left) * scaleX;\n      const canvasTop = (touches[i].clientY - boundingRect.top) * scaleY;\n\n      pointers[i].id = touches[i].identifier;\n      pointers[i].down = true;\n      pointers[i].x = canvasLeft;\n      pointers[i].y = canvasTop;\n      pointers[i].color = fluidColor;\n    }\n  });\n\n  window.addEventListener(\"mouseup\", () => {\n    pointers[0].down = false;\n  });\n\n  window.addEventListener(\"touchend\", e => {\n    const touches = e.changedTouches;\n    for (let i = 0; i < touches.length; i++)\n      for (let j = 0; j < pointers.length; j++)\n        if (touches[i].identifier == pointers[j].id) pointers[j].down = false;\n  });\n\n  return { update, reset };\n}\n\nexport { startFluid };\n","import { Universe } from \"../crate/pkg\";\n\nimport { startWebGL } from \"./render\";\nimport { fps } from \"./fps\";\nimport {} from \"./paint\";\nimport {} from \"./app\";\nimport { startFluid } from \"./fluid\";\nimport { ratio } from \"./constants\";\n\nif (window.safari) {\n  history.pushState(null, null, location.href);\n  window.onpopstate = function(event) {\n    history.go(1);\n  };\n}\n\nfunction mobileAndTabletcheck() {\n  var check = false;\n  (function(a) {\n    if (\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(\n        a\n      ) ||\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n        a.substr(0, 4)\n      )\n    )\n      check = true;\n  })(navigator.userAgent || navigator.vendor || window.opera);\n  return check;\n}\n\nif (mobileAndTabletcheck()) {\n  window.onbeforeunload = function() {\n    return true;\n  };\n}\n\nif (\"serviceWorker\" in navigator) {\n  window.addEventListener(\"load\", () => {\n    navigator.serviceWorker\n      .register(\"/service-worker.js\")\n      .then(registration => {\n        console.log(\"SW registered: \", registration);\n      })\n      .catch(registrationError => {\n        console.log(\"SW registration failed: \", registrationError);\n      });\n  });\n}\n\nlet n = 300;\nconst universe = Universe.new(n, n);\n\nlet width = n;\nlet height = n;\nconst canvas = document.getElementById(\"sand-canvas\");\nconst canvas2 = document.getElementById(\"fluid-canvas\");\n\ncanvas.height = n * window.devicePixelRatio;\ncanvas.width = n * window.devicePixelRatio;\n\ndocument.getElementById(\"background\").addEventListener(\"touchmove\", e => {\n  if (!window.paused) {\n    e.preventDefault();\n  }\n});\n\nconst ui = document.getElementById(\"ui\");\n\nlet resize = () => {\n  let screen_width = window.innerWidth;\n  let uiheight = 50;\n  let screen_height = window.innerHeight - uiheight;\n\n  let canvasStyle = \"\";\n  if (screen_width > screen_height) {\n    if (screen_width - window.innerHeight < 225) {\n      canvasStyle = `height: ${window.innerHeight}px; margin:3px`;\n      ui.style = `width: ${screen_width -\n        window.innerHeight -\n        12}px; margin: 2px;`;\n    } else {\n      canvasStyle = `height: ${window.innerHeight}px`;\n      ui.style = `width: ${(screen_width - window.innerHeight) / 2 -\n        7}px; margin: 2px;`;\n    }\n  } else {\n    canvasStyle = `width: ${screen_width}px; bottom:3px;`;\n  }\n  canvas.style = canvasStyle;\n  canvas2.style = canvasStyle;\n};\n\nresize();\nwindow.addEventListener(\"resize\", () => {\n  resize();\n});\n\nlet fluid = startFluid({ universe });\n\nlet drawSand = startWebGL({ canvas, universe });\n\nconst renderLoop = () => {\n  if (!window.paused) {\n    fps.render(); // new\n    universe.tick();\n    fluid.update();\n  }\n  drawSand();\n\n  window.animationId = requestAnimationFrame(renderLoop);\n};\n\nrenderLoop();\n\nfunction reset() {\n  fluid.reset();\n  fluid.update();\n  fluid.reset();\n  fluid.update();\n\n  universe.reset();\n}\nwindow.u = universe;\nexport { canvas, width, height, universe, ratio, reset };\n","import * as wasm from './sandtable_bg';\n\n/**\n*/\nexport const Species = Object.freeze({ Empty:0,Wall:1,Sand:2,Water:3,Stone:13,Ice:9,Gas:4,Cloner:5,Mite:15,Wood:7,Plant:11,Fungus:18,Seed:19,Fire:6,Lava:8,Acid:12,Dust:14,Oil:16,Firework:17, });\n\nexport function __wbg_random_58bd29ed438c19c0() {\n    return Math.random();\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nexport function __wbindgen_throw(ptr, len) {\n    throw new Error(getStringFromWasm(ptr, len));\n}\n\nfunction freeCell(ptr) {\n\n    wasm.__wbg_cell_free(ptr);\n}\n/**\n*/\nexport class Cell {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        freeCell(ptr);\n    }\n\n}\n\nfunction freeUniverse(ptr) {\n\n    wasm.__wbg_universe_free(ptr);\n}\n/**\n*/\nexport class Universe {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Universe.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        freeUniverse(ptr);\n    }\n\n    /**\n    * @returns {void}\n    */\n    reset() {\n        return wasm.universe_reset(this.ptr);\n    }\n    /**\n    * @returns {void}\n    */\n    tick() {\n        return wasm.universe_tick(this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        return wasm.universe_width(this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        return wasm.universe_height(this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    cells() {\n        return wasm.universe_cells(this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    winds() {\n        return wasm.universe_winds(this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    burns() {\n        return wasm.universe_burns(this.ptr);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @param {number} size\n    * @param {number} species\n    * @returns {void}\n    */\n    paint(x, y, size, species) {\n        return wasm.universe_paint(this.ptr, x, y, size, species);\n    }\n    /**\n    * @returns {void}\n    */\n    push_undo() {\n        return wasm.universe_push_undo(this.ptr);\n    }\n    /**\n    * @returns {void}\n    */\n    pop_undo() {\n        return wasm.universe_pop_undo(this.ptr);\n    }\n    /**\n    * @returns {void}\n    */\n    flush_undos() {\n        return wasm.universe_flush_undos(this.ptr);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    * @returns {Universe}\n    */\n    static new(width, height) {\n        return Universe.__wrap(wasm.universe_new(width, height));\n    }\n}\n\nfunction freeWind(ptr) {\n\n    wasm.__wbg_wind_free(ptr);\n}\n/**\n*/\nexport class Wind {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        freeWind(ptr);\n    }\n\n}\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nexport function __wbindgen_object_drop_ref(i) { dropObject(i); }\n\n","module.exports = \"precision highp float;\\n#define GLSLIFY 1\\nuniform float t;\\nuniform float dpi;\\nuniform vec2 resolution;\\nuniform bool isSnapshot;\\nuniform sampler2D backBuffer;\\nuniform sampler2D data;\\n\\nvarying vec2 uv;\\n\\n// clang-format off\\nvec3 hsv2rgb_4_0(vec3 c) {\\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\n\\n\\n//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289_1_1(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289_1_1(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute_1_2(vec4 x) {\\n     return mod289_1_1(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt_1_3(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise_1_4(vec3 v)\\n  {\\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D_1_5 = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g_1_6 = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g_1_6;\\n  vec3 i1 = min( g_1_6.xyz, l.zxy );\\n  vec3 i2 = max( g_1_6.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D_1_5.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289_1_1(i);\\n  vec4 p = permute_1_2( permute_1_2( permute_1_2(\\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D_1_5.wyz - D_1_5.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1_1_7 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0_1_8 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1_1_7.xy,h.z);\\n  vec3 p3 = vec3(a1_1_7.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt_1_3(vec4(dot(p0_1_8,p0_1_8), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0_1_8 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0_1_8,x0), dot(p1,x1),\\n                                dot(p2,x2), dot(p3,x3) ) );\\n  }\\n\\n\\n\\n//\\n// Description : Array and textureless GLSL 2D simplex noise function.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289_2_9(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec2 mod289_2_9(vec2 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec3 permute_2_10(vec3 x) {\\n  return mod289_2_9(((x*34.0)+1.0)*x);\\n}\\n\\nfloat snoise_2_11(vec2 v)\\n  {\\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\\n                      0.024390243902439); // 1.0 / 41.0\\n// First corner\\n  vec2 i  = floor(v + dot(v, C.yy) );\\n  vec2 x0 = v -   i + dot(i, C.xx);\\n\\n// Other corners\\n  vec2 i1;\\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\\n  //i1.y = 1.0 - i1.x;\\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\\n  // x1 = x0 - i1 + 1.0 * C.xx ;\\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\\n  vec4 x12 = x0.xyxy + C.xxzz;\\n  x12.xy -= i1;\\n\\n// Permutations\\n  i = mod289_2_9(i); // Avoid truncation effects in permutation\\n  vec3 p = permute_2_10( permute_2_10( i.y + vec3(0.0, i1.y, 1.0 ))\\n    + i.x + vec3(0.0, i1.x, 1.0 ));\\n\\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\\n  m = m*m ;\\n  m = m*m ;\\n\\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\\n\\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\\n  vec3 h = abs(x) - 0.5;\\n  vec3 ox = floor(x + 0.5);\\n  vec3 a0 = x - ox;\\n\\n// Normalise gradients implicitly by scaling m\\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\\n\\n// Compute final noise value at P\\n  vec3 g;\\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\\n  return 130.0 * dot(m, g);\\n}\\n\\n\\n\\nhighp float random_3_12(vec2 co)\\n{\\n    highp float a = 12.9898;\\n    highp float b = 78.233;\\n    highp float c = 43758.5453;\\n    highp float dt= dot(co.xy ,vec2(a,b));\\n    highp float sn= mod(dt,3.14);\\n    return fract(sin(sn) * c);\\n}\\n\\n\\n\\n// clang-format on\\n\\nvoid main() {\\n  vec3 color;\\n  //   float r = abs(sin(t / 25.));\\n  //   if (length(uv) < r && length(uv) > r - 0.1) {\\n  // color = hsv2rgb(vec3(sin(t * 0.01), 0.5, 0.5));\\n\\n  vec2 textCoord = (uv * vec2(0.5, -0.5)) + vec2(0.5);\\n  // vec3 bb = texture2D(backBuffer, (uv * 0.5) + vec2(0.5)).rgb;\\n\\n  vec4 data = texture2D(data, textCoord);\\n  int type = int((data.r * 255.) + 0.1);\\n  float hue = 0.0;\\n  float saturation = 0.6;\\n  float lightness = 0.3 + data.g * 0.5;\\n  float noise = snoise_1_4(vec3(floor(uv * resolution / dpi), t * 0.05));\\n  float a = 1.0;\\n\\n  if (type == 0) {\\n    hue = 0.0;\\n    saturation = 0.1;\\n    lightness = 0.1;\\n    a = 0.1;\\n    if (isSnapshot) {\\n      saturation = 0.05;\\n      lightness = 1.01;\\n      a = 1.0;\\n    }\\n  } else if (type == 1) {\\n    hue = 0.1;\\n    saturation = 0.1;\\n    lightness = 0.4;\\n  } else if (type == 2) {\\n    hue = 0.1;\\n    saturation = 0.5;\\n    lightness += 0.3;\\n  } else if (type == 3) { // water\\n    hue = 0.6;\\n    lightness = 0.7 + data.g * 0.25 + noise * 0.1;\\n  } else if (type == 4) { // gas\\n    hue = 0.0;\\n    lightness += 0.4;\\n    saturation = 0.2 + (data.b * 1.5);\\n  } else if (type == 5) { // clone\\n    hue = 0.9;\\n    saturation = 0.3;\\n  } else if (type == 6) { // fire\\n    hue = (data.g * 0.1);\\n    saturation = 0.7;\\n\\n    lightness = 0.7 + (data.g * 0.3) + ((noise + 0.8) * 0.5);\\n  } else if (type == 7) { // wood\\n    hue = (data.g * 0.1);\\n    saturation = 0.3;\\n    lightness = 0.3 + data.g * 0.3;\\n  } else if (type == 8) { // lava\\n    hue = (data.g * 0.1);\\n    lightness = 0.7 + data.g * 0.25 + noise * 0.1;\\n  } else if (type == 9) { // ice\\n    hue = 0.6;\\n    saturation = 0.4;\\n    lightness = 0.7 + data.g * 0.5;\\n  } else if (type == 10) { // sink\\n    hue = 0.9;\\n    saturation = 0.4;\\n    lightness = 1.0;\\n  } else if (type == 11) { // plant\\n    hue = 0.4;\\n    saturation = 0.4;\\n  } else if (type == 12) { // acid\\n    hue = 0.18;\\n    saturation = 0.9;\\n    lightness = 0.8 + data.g * 0.2 + noise * 0.05;\\n  } else if (type == 13) { // stone\\n    hue = -0.4 + (data.g * 0.5);\\n    saturation = 0.1;\\n    // lightness = 0.2 + data.g * 0.5;\\n  } else if (type == 14) { // dust\\n    hue = (data.g * 2.0) + t * .0008;\\n    saturation = 0.4;\\n    lightness = 0.8;\\n  } else if (type == 15) { // mite\\n    hue = 0.8;\\n    saturation = 0.9;\\n    lightness = 0.8;\\n  } else if (type == 16) { // oil\\n    hue = (data.g * 5.0) + t * .008;\\n\\n    saturation = 0.2;\\n    lightness = 0.3;\\n  } else if (type == 17) { // firework\\n    hue = 0.0;\\n    saturation = 0.4 + data.b;\\n    lightness = 0.9;\\n  } else if (type == 18) { // fungus\\n    hue = (data.g * 0.15) - 0.1;\\n    saturation = (data.g * 0.8) - 0.05;\\n\\n    // (data.g * 0.00);\\n    lightness = 1.5 - (data.g * 0.2);\\n  } else if (type == 19) { // seed/flower\\n\\n    hue = fract(fract(data.b * 2.) * 0.5) - 0.3;\\n    saturation = 0.7 * (data.g + 0.4) + data.b * 0.2;\\n    lightness = 0.9 * (data.g + 0.9);\\n  }\\n  if (isSnapshot == false) {\\n    lightness *= (0.975 + snoise_2_11(floor(uv * resolution / dpi)) * 0.025);\\n  }\\n  color = hsv2rgb_4_0(vec3(hue, saturation, lightness));\\n  gl_FragColor = vec4(color, a);\\n}\"","module.exports = \"\\n// boring \\\"pass-through\\\" vertex shader\\nprecision mediump float;\\n#define GLSLIFY 1\\nattribute vec2 position;\\nvarying vec2 uv;\\nvoid main() {\\n  uv = position;\\n  gl_Position = vec4(position, 0, 1);\\n}\"","module.exports = \"precision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nattribute vec2 aPosition;\\nvarying vec2 vUv;\\nvarying vec2 vL;\\nvarying vec2 vR;\\nvarying vec2 vT;\\nvarying vec2 vB;\\nuniform vec2 texelSize;\\nvoid main() {\\n  vUv = aPosition * 0.5 + 0.5;\\n  vL = vUv - vec2(texelSize.x, 0.0);\\n  vR = vUv + vec2(texelSize.x, 0.0);\\n  vT = vUv + vec2(0.0, texelSize.y);\\n  vB = vUv - vec2(0.0, texelSize.y);\\n  gl_Position = vec4(aPosition, 0.0, 1.0);\\n}\\n\"","module.exports = \"precision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nuniform sampler2D uTexture;\\nuniform sampler2D uWind;\\nuniform float value;\\nvoid main() {\\n  float pressure = texture2D(uWind, vUv).z;\\n  pressure *= 512.;\\n  pressure *= pressure;\\n  gl_FragColor = value * (texture2D(uTexture, vUv) + vec4(pressure));\\n}\"","module.exports = \"precision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nuniform sampler2D uTexture;\\nvoid main() {\\n  vec3 color = texture2D(uTexture, vUv).rgb * 0.1;\\n  color *= 0.5;\\n  color = min(color, 0.9);\\n  color = vec3(1.0) - color;\\n  color *= vec3(0.95, 0.9, 0.9);\\n  // color *= 0.5;\\n  gl_FragColor = vec4(color, 1.0);\\n}\\n\"","module.exports = \"precision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nuniform sampler2D uTarget;\\nuniform float aspectRatio;\\nuniform vec3 color;\\nuniform vec2 point;\\nuniform float radius;\\nvoid main() {\\n  vec2 p = vUv - point.xy;\\n  p.x *= aspectRatio;\\n  vec3 splat = exp(-dot(p, p) / radius) * color;\\n  vec3 base = texture2D(uTarget, vUv).xyz;\\n  gl_FragColor = vec4(base + splat, 1.0);\\n}\"","module.exports = \"precision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nuniform sampler2D uVelocity;\\nuniform sampler2D uSource;\\nuniform sampler2D uWind;\\nuniform vec2 texelSize;\\nuniform float dt;\\nuniform float dissipation;\\nvec4 bilerp(in sampler2D sam, in vec2 p) {\\n  vec4 st;\\n  st.xy = floor(p - 0.5) + 0.5;\\n  st.zw = st.xy + 1.0;\\n  vec4 uv = st * texelSize.xyxy;\\n  vec4 a = texture2D(sam, uv.xy);\\n  vec4 b = texture2D(sam, uv.zy);\\n  vec4 c = texture2D(sam, uv.xw);\\n  vec4 d = texture2D(sam, uv.zw);\\n  vec2 f = p - st.xy;\\n  return mix(mix(a, b, f.x), mix(c, d, f.x), f.y);\\n}\\nvoid main() {\\n  vec2 coord = gl_FragCoord.xy - dt * texture2D(uVelocity, vUv).xy;\\n  float density = texture2D(uWind, vUv).w;\\n  if (density > 0.99) {\\n    density = 0.;\\n  }\\n  gl_FragColor = dissipation * (bilerp(uSource, coord) + vec4(density));\\n  gl_FragColor.a = 1.0;\\n}\"","module.exports = \"\\nprecision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nuniform sampler2D uVelocity;\\nuniform sampler2D uSource;\\nuniform sampler2D uWind;\\nuniform vec2 texelSize;\\nuniform float dt;\\nuniform float dissipation;\\nvoid main() {\\n  vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\\n  float density = texture2D(uWind, vUv).w * 1.;\\n  if (density > 0.99) {\\n    density = 0.;\\n  }\\n\\n  gl_FragColor = dissipation * (texture2D(uSource, coord) + vec4(density));\\n  gl_FragColor.a = 1.0;\\n}\\n\"","module.exports = \"precision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nvarying vec2 vL;\\nvarying vec2 vR;\\nvarying vec2 vT;\\nvarying vec2 vB;\\nuniform sampler2D uVelocity;\\nvec2 sampleVelocity(in vec2 uv) {\\n  vec2 multiplier = vec2(1.0, 1.0);\\n  if (uv.x < 0.0) {\\n    uv.x = 0.0;\\n    multiplier.x = -1.0;\\n  }\\n  if (uv.x > 1.0) {\\n    uv.x = 1.0;\\n    multiplier.x = -1.0;\\n  }\\n  if (uv.y < 0.0) {\\n    uv.y = 0.0;\\n    multiplier.y = -1.0;\\n  }\\n  if (uv.y > 1.0) {\\n    uv.y = 1.0;\\n    multiplier.y = -1.0;\\n  }\\n  return multiplier * texture2D(uVelocity, uv).xy;\\n}\\nvoid main() {\\n  float L = sampleVelocity(vL).x;\\n  float R = sampleVelocity(vR).x;\\n  float T = sampleVelocity(vT).y;\\n  float B = sampleVelocity(vB).y;\\n  float div = 0.5 * (R - L + T - B);\\n  gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\\n}\\n\"","module.exports = \"precision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nvarying vec2 vL;\\nvarying vec2 vR;\\nvarying vec2 vT;\\nvarying vec2 vB;\\nuniform sampler2D uVelocity;\\nvoid main() {\\n  float L = texture2D(uVelocity, vL).y;\\n  float R = texture2D(uVelocity, vR).y;\\n  float T = texture2D(uVelocity, vT).x;\\n  float B = texture2D(uVelocity, vB).x;\\n  float vorticity = R - L - T + B;\\n  gl_FragColor = vec4(vorticity, 0.0, 0.0, 1.0);\\n}\"","module.exports = \"precision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nvarying vec2 vT;\\nvarying vec2 vB;\\nuniform sampler2D uVelocity;\\nuniform sampler2D uCurl;\\nuniform float curl;\\nuniform float dt;\\nvoid main() {\\n  float T = texture2D(uCurl, vT).x;\\n  float B = texture2D(uCurl, vB).x;\\n  float C = texture2D(uCurl, vUv).x;\\n  vec2 force = vec2(abs(T) - abs(B), 0.0);\\n  force *= 1.0 / length(force + 0.00001) * curl * C;\\n  vec2 vel = texture2D(uVelocity, vUv).xy;\\n  gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);\\n}\"","module.exports = \"precision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nvarying vec2 vL;\\nvarying vec2 vR;\\nvarying vec2 vT;\\nvarying vec2 vB;\\nuniform sampler2D uPressure;\\nuniform sampler2D uDivergence;\\nvec2 boundary(in vec2 uv) {\\n  uv = min(max(uv, 0.0), 1.0);\\n  return uv;\\n}\\nvoid main() {\\n  float L = texture2D(uPressure, boundary(vL)).x;\\n  float R = texture2D(uPressure, boundary(vR)).x;\\n  float T = texture2D(uPressure, boundary(vT)).x;\\n  float B = texture2D(uPressure, boundary(vB)).x;\\n  float C = texture2D(uPressure, vUv).x;\\n  float divergence = texture2D(uDivergence, vUv).x;\\n  float pressure = (L + R + B + T - divergence) * 0.25;\\n  gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\\n}\"","module.exports = \"precision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nvarying vec2 vL;\\nvarying vec2 vR;\\nvarying vec2 vT;\\nvarying vec2 vB;\\nuniform sampler2D uPressure;\\nuniform sampler2D uVelocity;\\nuniform sampler2D uWind;\\nuniform sampler2D uCells;\\n\\nvec2 boundary(in vec2 uv) {\\n  uv = min(max(uv, 0.0), 1.0);\\n  return uv;\\n}\\nvoid main() {\\n  float L = texture2D(uPressure, boundary(vL)).x;\\n  float R = texture2D(uPressure, boundary(vR)).x;\\n  float T = texture2D(uPressure, boundary(vT)).x;\\n  float B = texture2D(uPressure, boundary(vB)).x;\\n  vec2 velocity = texture2D(uVelocity, vUv).xy;\\n  vec2 wind = texture2D(uWind, vUv).xy;\\n  vec2 cell = texture2D(uCells, vec2(vUv.x, 1.0 - (vUv.y + (1.0 / 300.)))).xy;\\n  velocity.xy -= vec2(R - L, T - B);\\n  velocity.xy += wind * 25.;\\n\\n  int type = int((cell.r * 255.) + 0.1);\\n\\n  // || type == 7 || type == 9\\n  if (type == 1 || type == 5) {\\n    velocity = vec2(0.);\\n  }\\n  // velocity = cell.rg * 100.;\\n  gl_FragColor = vec4(velocity, 0.0, 1.0);\\n}\"","module.exports = \"precision highp float;\\nprecision mediump sampler2D;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\nuniform sampler2D uTexture;\\nuniform sampler2D uPressure;\\nvoid main() {\\n  vec2 v = texture2D(uTexture, vUv).rg;\\n  float p = texture2D(uPressure, vUv).r;\\n  vec3 vp = vec3(v, p);\\n  vp = max(vp, vec3(-250.));\\n  vp = min(vp, vec3(250.));\\n  vp /= 500.;\\n  vp += vec3(0.5, 0.5, 0.);\\n  // v = vec2(0.5);\\n  gl_FragColor = vec4(vp, 0.0);\\n}\\n\""],"sourceRoot":""}